<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>

	<name>day05_30</name>
	<groupId>extjsmvc</groupId>
	<artifactId>day05_30</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<!-- http://mvnrepository.com/ 工厂地址 -->
			<!-- http://myrepo.net/repo -->
			<!-- 这个是 -->
			<url>http://mirrors.ibiblio.org/maven2/</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- 配置spring的版本和 编码方式 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.2.3.RELEASE</spring.version>
	</properties>
	<build>
		<plugins>
			<plugin>

				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.7</version>
				<configuration>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<!-- 端口号 -->
							<port>80</port>
							<!-- 响应时间 -->
							<maxIdleTime>30000</maxIdleTime>
						</connector>
					</connectors>
					<!-- 扫描的时间 就是自动加载 每10秒加载一次 -->
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<!-- 配置 事物的 jetty-context.xml文件 -->
					<contextXml>${project.basedir}/src/main/resources/jetty-context.xml</contextXml>
					<!-- 本身的web项目路径，这个也是非配置项目 -->
					<!-- <webAppSourceDirectory>src/main/webapp</webAppSourceDirectory> -->
					<!-- 访问路径 这个 需要配置， 这个 /就表示直接就可以访问了 -->
					<contextPath>/</contextPath>
					<!-- 设定编码，默认是utf-8 -->
					<systemProperties>
						<systemProperty>
							<name>org.mortbay.util.URI.charset</name>
							<value>UTF-8</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
	
		<!-- jsp和sevlet这两个包是 web开发必须的 -->
		<!-- 导入jsp -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2.1-b03</version>
			<scope>provided</scope>
		</dependency>
		<!-- 导入servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		
		
		
		
		<!-- Spring开始 -->
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- springcontext -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring -beans -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- 导入Spring的orm -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring测试 -->
		<!-- spring context 中的测试方法 ,要导入老版本的，新版本的 操作有点不一样 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<!-- 配置切面 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!---aspectj 面向切向 -->
		<dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.5</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.15.0-GA</version>
		</dependency>
		<!-- Spring结束-->



		<!-- 数据库 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.35</version>
		</dependency>


		<!-- Hibernate配置开始 -->
		<!-- 配置Hibernate -->
		<!-- 对象验证用 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
  	<dependency>
			<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>3.6.10.Final</version>
	</dependency>
		<!-- 数据库连接池 -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- Hibernate配置结束-->
		
		<!-- 配置struts -->
		
		
		<!-- 配置struts结束 -->
		
		<!-- 配置Spring mvc -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-webmvc</artifactId>
		  <version>3.2.2.RELEASE</version>
		</dependency>
		
		
		<!-- 配置fileupload -->
		<dependency>
			<groupId>com.liferay</groupId>
			<artifactId>org.apache.commons.fileupload</artifactId>
			<version>1.2.2.LIFERAY-PATCHED-1</version>
		</dependency>
		
		<!-- 日志 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>

		<!-- junit的测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<!-- 运行时加入 -->
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
